plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.14'
  id 'org.beryx.jlink' version '2.25.0'
  id 'jacoco'
}

group 'org.scrollify'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.10.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'org.scrollify.main'
  mainClassName = 'org.scrollify.main.App'
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation('org.controlsfx:controlsfx:11.2.1')
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
  implementation 'org.postgresql:postgresql:42.5.0'

  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
  testImplementation 'org.testfx:testfx-junit5:4.0.18'
  testImplementation 'org.testfx:testfx-core:4.0.18'
  testImplementation("org.mockito:mockito-core:5.5.0")
  testImplementation("org.mockito:mockito-junit-jupiter:5.5.0")
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport

  // Include JavaFX modules for tests
  jvmArgs = [
          '--module-path', classpath.asPath,
          '--add-modules', 'javafx.controls,javafx.fxml'
  ]
}

jacoco {
  toolVersion = "0.8.10"
}

jacocoTestReport {
  dependsOn test

  reports {
    xml.required = true  // Generates XML report
    html.required = true // Generates HTML report
    csv.required = false // Disable CSV report if not needed
  }

  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, exclude: ['org/scrollify/database/**'])
    }))
  }
}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}

// Add this section to ensure that JavaFX runs correctly in tests
test {
  useJUnitPlatform()
  doFirst {
    jvmArgs = [
            '--module-path', classpath.asPath,
            '--add-modules', 'javafx.controls,javafx.fxml'
    ]
  }
}
